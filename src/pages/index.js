import { useState } from "react";
import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { AiOutlineScissor } from "react-icons/ai";
import Card from "../../components/Card";

const inter = Inter({ subsets: ["latin"] });

export default function Home({ data }) {
  const [longUrl, setLongUrl] = useState("");
  const [shortUrl, setShortUrl] = useState("");

  const handleSubmit = async (event) => {
    event.preventDefault();

    const response = await fetch(`/api/shorten?origUrl=${longUrl}`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
    });

    const data = await response.json();
    setShortUrl(data.shortenUrl);
    setLongUrl("");
  };

  return (
    <>
      <Head>
        <title>URL Shortener</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {/* Navbar */}
        <div className={styles.description}>
          <p>
            Built by&nbsp;
            <code className={styles.code}>Eugene Goh</code>
          </p>

          <div>
            <a
              href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
            >
              Deploy with{" "}
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                className={styles.vercelLogo}
                width={100}
                height={24}
                priority
              />
            </a>
          </div>
        </div>

        <div className={styles.center}>
          <h2
            className={
              "bg-gradient-to-br from-black to-stone-500 bg-clip-text text-center font-display text-lg font-bold tracking-[-0.02em] text-transparent drop-shadow-sm md:text-5xl md:leading-[5rem] m-5"
            }
            style={{ opacity: 1 }}
          >
            Trim Your Links with Our URL Shortener!
          </h2>

          {/* Input field */}
          <form className="flex items-center" onSubmit={handleSubmit}>
            <label htmlFor="simple-search" className="sr-only">
              Search
            </label>

            <div className="relative w-full">
              <div className="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                <AiOutlineScissor />
              </div>

              <input
                type="url"
                id="simple-search"
                className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                placeholder="Trim Now"
                value={longUrl}
                onChange={(event) => setLongUrl(event.target.value)}
                pattern="^(https?://)?([a-zA-Z0-9-]+\.)+[a-zA-Z]{2,}$"
                title="Please enter a valid URL"
                required
              />
            </div>

            <button
              type="submit"
              className="p-2.5 ml-2 text-sm font-medium text-white bg-blue-700 rounded-lg border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
            >
              <AiOutlineScissor />
              <span className="sr-only">Search</span>
            </button>
          </form>
        </div>

        {/* Display shorten url, target url & title tag */}
        <div className={styles.grid}>
          {data.data.map((i, index) => (
            <div key={index}>
              <Card
                shortUrl={i.shortUrl}
                title={i.title}
                targetUrl={i.origUrl}
              />
            </div>
          ))}
        </div>
      </main>
    </>
  );
}

export async function getServerSideProps(context) {
  const apiUrl = "http://localhost:3000/api/all";
  const res = await fetch(apiUrl);
  const data = await res.json();

  return {
    props: {
      data,
    },
  };
}
